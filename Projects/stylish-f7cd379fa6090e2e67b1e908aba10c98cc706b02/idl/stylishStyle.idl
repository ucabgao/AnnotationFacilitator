#include "nsISupports.idl"
#include "nsIClassInfo.idl"
#include "nsIConsoleListener.idl"
#include "nsIObserver.idl"

[scriptable, uuid(6cd15928-080e-4c0f-b3af-90922cf4f9e8)]
interface stylishStyle : nsIClassInfo
{
	attribute unsigned long id;
	attribute AString url;
	// url to be used for "already installed" checks
	attribute AString idUrl;
	attribute AString updateUrl;
	attribute AString md5Url;
	attribute AString name;
	attribute AString code;
	attribute boolean enabled;
	// the original code installed. can be null if it's the same as "code" or this wasn't an install
	attribute AString originalCode;
	attribute AString originalMd5;
	attribute short applyBackgroundUpdates;

	//see the flags below. you can set this before initing the style
	attribute short mode;

	//modes
	attribute short CALCULATE_META;
	attribute short REGISTER_STYLE_ON_CHANGE;
	attribute short REGISTER_STYLE_ON_LOAD;
	attribute short UNREGISTER_STYLE_ON_LOAD;

	void list(in short mode, out unsigned long count, [array, size_is(count), retval] out stylishStyle retv);
	stylishStyle find(in unsigned long id, in short mode);
	stylishStyle findByUrl(in AString url, in short mode);
	void findForUrl(in AString url, in boolean includeGlobal, in short mode, out unsigned long count, [array, size_is(count), retval] out stylishStyle retv);
	void findEnabled(in boolean enabled, in short mode, out unsigned long count, [array, size_is(count), retval] out stylishStyle retv);
	void findByMeta(in AString name, in AString value, in short mode, out unsigned long count, [array, size_is(count), retval] out stylishStyle retv);
	void checkForErrors(in AString css, in nsIConsoleListener listener);
	AString regexToSample(in AString regex);

	// applyBackgroundUpdates is really a short, but set as a string here so that we can pass null for default
	void init(in AString url, in AString idUrl, in AString updateUrl, in AString md5Url, in AString name, in AString code, in boolean enabled, in AString originalCode, in AString originalMd5, in AString applyBackgroundUpdates);
	void save();
	void delete();
	boolean appliesToUrl(in AString url);
	// observer's topics can be:
	//   - stylish-style-update-check-start
	//   - stylish-style-update-check-done with data:
	//     - update-check-error
	//     - no-update-available
	//     - update-available
	//     - no-update-possible
	void checkForUpdates(in nsIObserver observer);
	// observer's topics can be:
	//   - stylish-style-update-start
	//   - stylish-style-update-done with data:
	//     - update-failure
	//     - update-success
	//     - no-update-possible
	void applyUpdate(in nsIObserver observer);
	void setPreview(in boolean on);
	void revert();
	void addMeta(in AString name, in AString value);
	void removeMeta(in AString name, in AString value);
	void removeAllMeta(in AString name);
	//XXX this is a string instead of AString. problem?
	void getMeta(in AString name, out unsigned long count, [array, size_is(count), retval] out string retv);
	void getTypes(out unsigned long count, [array, size_is(count), retval] out string retv);
	void getPrettyAppliesTo(out unsigned long count, [array, size_is(count), retval] out string retv);
};
